name: Ejecutar Curvas de Cobro (mensual con lógica del 5)

on:
  schedule:
    # 12:00 p.m. Bogotá = 17:00 UTC (se dispara del 3 al 7 y el job decide)
    - cron: '0 17 3-7 * *'
  workflow_dispatch:
    inputs:
      force_run:
        description: "Forzar ejecución (ignorar regla del día 5)"
        required: false
        default: "false"
        type: choice
        options: ["false", "true"]

jobs:
  run-mensual:
    runs-on: ubuntu-latest

    steps:
      - name: Chequear repositorio
        uses: actions/checkout@v4

      - name: Configurar Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Instalar dependencias
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then
            pip install -r requirements.txt
          else
            pip install \
              pandas numpy requests matplotlib openpyxl pyarrow pytz \
              gspread gspread-dataframe \
              google-api-python-client google-auth google-auth-httplib2 google-auth-oauthlib \
              papermill ipykernel
          fi

      - name: Registrar kernel python3
        run: |
          python -m ipykernel install --name python3 --sys-prefix

      # ---------- Decidir si hoy se debe ejecutar (zona horaria Bogotá) ----------
      - id: decider
        name: Decidir si correr hoy según regla del día 5
        shell: bash
        run: |
          # Si viene forzado por workflow_dispatch -> RUN=true y salimos
          if [[ "${{ github.event_name }}" == "workflow_dispatch" && "${{ inputs.force_run }}" == "true" ]]; then
            echo "Forzado manualmente. Ejecutando sin validar regla del día 5."
            echo "run=true" >> "$GITHUB_OUTPUT"
            exit 0
          fi

          TZ=America/Bogota
          TODAY=$(TZ=$TZ date +%Y-%m-%d)
          DOW_TODAY=$(TZ=$TZ date +%u)      # 1=Lun ... 7=Dom
          DAY=$(TZ=$TZ date +%d)
          YEAR=$(TZ=$TZ date +%Y)
          MONTH=$(TZ=$TZ date +%m)

          TARGET="${YEAR}-${MONTH}-05"
          DOW5=$(TZ=$TZ date -d "$TARGET" +%u)

          RUN=false

          # Caso A: el 5 es laboral (lun-vie) y hoy ES el 5
          if [[ "$DAY" == "05" && $DOW_TODAY -ge 1 && $DOW_TODAY -le 5 ]]; then
            RUN=true
          fi

          # Caso B: el 5 cae fin de semana → viernes anterior, lunes 6, martes 7
          if [[ $DOW5 -ge 6 ]]; then
            FRIDAY=$(TZ=$TZ date -d "$TARGET last Friday" +%Y-%m-%d)
            MON=$(TZ=$TZ date -d "$TARGET +1 day" +%Y-%m-%d)
            TUE=$(TZ=$TZ date -d "$TARGET +2 day" +%Y-%m-%d)
            if [[ "$TODAY" == "$FRIDAY" || "$TODAY" == "$MON" || "$TODAY" == "$TUE" ]]; then
              RUN=true
            fi
          fi

          echo "Hoy: $TODAY (dow=$DOW_TODAY), 5 del mes: $TARGET (dow=$DOW5)"
          if $RUN; then
            echo "run=true" >> "$GITHUB_OUTPUT"
          else
            echo "run=false" >> "$GITHUB_OUTPUT"
          fi

      - name: Saltar si hoy no corresponde (solo en cron)
        if: github.event_name != 'workflow_dispatch' && steps.decider.outputs.run != 'true'
        run: |
          echo "Hoy no toca correr según la regla del día 5 (ejecución por cron). Saliendo…"
          exit 0

      # ---------- Ejecutar el notebook ----------
      - name: Ejecutar Codigo_act_CC
        # Se ejecuta si: (manual) o (cron y hoy corresponde)
        if: github.event_name == 'workflow_dispatch' || steps.decider.outputs.run == 'true'
        env:
          USER_API:     ${{ secrets.USER_API }}
          SECRET_API:   ${{ secrets.SECRET_API }}
          CORREO_COLAB: ${{ secrets.CORREO_COLAB }}
          MI_JSON:      ${{ secrets.MI_JSON }}
        run: |
          papermill "Codigo_act_CC.ipynb" "output_Codigo_act_CC.ipynb" \
            --cwd . -k python3 --log-output

      - name: Subir artefacto
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: output-Codigo_act_CC
          path: output_Codigo_act_CC.ipynb
